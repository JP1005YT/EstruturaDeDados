<?php
    include_once './../../backend/classes/Usuario.php';
    include_once './../../backend/controllers/page_controller.php';
    session_start();

    spl_autoload_register(function ($class_name) {
        include './../../backend/classes/' . $class_name . '.php';
    });
?>
<!DOCTYPE html>
<html lang="pt-BR">
    <head>
        <meta charset='utf-8'>
        <meta http-equiv='X-UA-Compatible' content='IE=edge'>
        <title> DataStruct School | Home</title>
        <meta name='viewport' content='width=device-width, initial-scale=1'>
        <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
        <link rel='stylesheet' type='text/css' media='screen' href='main.css'>
        <link rel="shortcut icon" href="./../../logo.png" />
    </head>
    <body>
    <?php
        PageController::renderHeader();
    ?>
    <main>
        <section class="card">
            <h1>Bem-vindo ao Mundo M√°gico das Estruturas de Dados!</h1>
            <section>
                <h2>O que s√£o Estruturas de Dados?</h2>
                <img src="../../src/BauTesouro.png" class="image">
                <p>
                    Imagine que voc√™ tem um ba√∫ do tesouro cheio de brinquedos. Voc√™ n√£o vai querer jogar tudo l√° de qualquer jeito, certo? 
                    Voc√™ vai querer organizar seus brinquedos para que possa encontrar o que quiser rapidamente. No mundo da programa√ß√£o, 
                    usamos algo chamado "estruturas de dados" para organizar nossos tesouros, que s√£o os dados! Assim como voc√™ organiza seus 
                    brinquedos, os programadores organizam os dados para que possam usar e encontrar o que precisam de forma f√°cil e r√°pida.
                </p>
                <p>
                    Estruturas de dados s√£o fundamentais em programa√ß√£o porque permitem armazenar, acessar e gerenciar dados de forma eficiente. 
                    Elas s√£o usadas em quase todos os programas de computador para melhorar o desempenho e a organiza√ß√£o do c√≥digo. 
                    Sem estruturas de dados, seria muito dif√≠cil lidar com grandes quantidades de informa√ß√£o de maneira r√°pida e eficaz.
                </p>
            </section>
            <section>
                <h2>Exemplos Divertidos de Estruturas de Dados</h2>
                <section class="example">
                    <h3>1. Pilha de Panquecas ü•û</h3>
                    <img src="../../src/panquecas.png" class="image">
                    <p>
                        Uma pilha √© como uma pilha de panquecas. Voc√™ coloca a primeira panqueca no prato, depois coloca outra por cima, e outra, 
                        e outra... Quando voc√™ vai comer, voc√™ come√ßa pela panqueca do topo! Isso √© o que chamamos de "LIFO" - Last In, First Out 
                        (√öltimo a Entrar, Primeiro a Sair).
                    </p>
                    <pre>
                        <code>
                          1.    using System;
                          2.    using System.Collections.Generic;
                          3.
                          4.    Class PilhaDePanquecas {  
                          5.        static void Main() {
                          6.            // Cria uma pilha usando a classe Stack da biblioteca padr√£o.
                          7.            Stack pilha = new Stack();
                          8.     
                          9.            // Adiciona a string "Panqueca 1" ao topo da pilha.
                          10.           pilha.Push("Panqueca 1");
                          11.
                          12.           // Adiciona a string "Panqueca 2" ao topo da pilha.
                          13.           pilha.Push("Panqueca 2");
                          14.
                          15.           // Adiciona a string "Panqueca 3" ao topo da pilha.
                          16.           pilha.Push("Panqueca 3");
                          17.
                          18.           Console.WriteLine(pilha.Pop());  // Imprime e remove o elemento do topo da pilha (√∫ltimo adicionado).
                          19.       }
                          20.   } 
                        </code>
                    </pre>
                </section>
                <section class="example">
                    <h3>2. Fila do Tobog√£ üèä</h3>
                    <img src="../../src/toboga.png" class="image">
                    <p>
                        Uma fila √© como esperar na fila para o tobog√£ na piscina. A primeira pessoa que chega √© a primeira a descer pelo tobog√£. 
                        E a √∫ltima pessoa que chega ter√° que esperar sua vez. Isso √© "FIFO" - First In, First Out (Primeiro a Entrar, Primeiro a Sair).
                    </p>
                    <pre>
                        <code>
                            1.    using System;
                            2.    using System.Collections.Generic;

                            3.    Class FilaDoTobog√£ {
                            4.        static void Main() {
                            5.            // Cria uma fila usando a classe Queue da biblioteca padr√£o.
                            6.            Queue fila = new Queue();

                            7.            // Adiciona a string "Pessoa 1" ao final da fila.
                            8.            fila.Enqueue("Pessoa 1");

                            9.            // Adiciona a string "Pessoa 2" ao final da fila.
                            10.           fila.Enqueue("Pessoa 2");

                            11.           // Adiciona a string "Pessoa 3" ao final da fila.
                            12.           fila.Enqueue("Pessoa 3");
                                                                
                            13.           // Remove e retorna o primeiro elemento da fila, que √© "Pessoa 1".
                            14.           Console.WriteLine(fila.Dequeue());

                            15.           // Remove e retorna o primeiro elemento da fila, que √© "Pessoa 2".
                            16.           Console.WriteLine(fila.Dequeue());
                            17.       }
                            18.   }
                        </code>
                    </pre>
            </section>
            <section class="example">
                <h3>3. Caixa de Brinquedos üß∏</h3>
                <img src="../../src/brinquedos.png" class="image">
                <p>
                    Uma lista √© como sua caixa de brinquedos onde voc√™ pode pegar qualquer brinquedo que quiser, n√£o importa se est√° no topo, no 
                    meio ou no fundo. Voc√™ pode at√© mesmo colocar um novo brinquedo onde quiser!
                </p>
                <pre>
                    <code>
                        1.    using System;
                        2.    using System.Collections.Generic;
                        3.    Class CaixaDeBrinquedos {
                        4.        static void Main() { 
                        5.          // Cria√ß√£o de uma nova lista gen√©rica do tipo string chamada caixa.
                        6.           List caixa = new List(); 

                        7.          // Adiciona o string "Carrinho" √† lista caixa, na primeira posi√ß√£o (√≠ndice 0).
                        8.          caixa.Add("Carrinho"); 


                        9.          // Adiciona o string "Boneca" √† lista caixa, na segunda posi√ß√£o (√≠ndice 1).
                        10.         caixa.Add("Boneca");  

                        11.         // Adiciona o string "Bola" √† lista caixa, na terceira posi√ß√£o (√≠ndice 2).
                        12.         caixa.Add("Bola");

                        14.          // Imprime o elemento da lista caixa no √≠ndice 0, que √© "Carrinho".
                        15.          Console.WriteLine(caixa[0]);
                                                                
                        16.         // Imprime o elemento da lista caixa no √≠ndice 2, que √© "Bola".
                        17.         Console.WriteLine(caixa[2]);
                        18.       }
                        19.   }
                    </code>
                </pre>
            </section>
        </section>
        <section class="aulas">
            <h2>Aulas</h2>
            <ul class="class_grid">
            <?php
                // Fun√ß√£o para listar todas as pastas de um diret√≥rio
                function listarPastas($directory) {
                    $pastas = [];

                    // Abre o diret√≥rio
                    if ($handle = opendir($directory)) {
                        // Itera sobre os arquivos e pastas do diret√≥rio
                        while (false !== ($entry = readdir($handle))) {
                            // Ignora os diret√≥rios '.' e '..'
                            if ($entry !== '.' && $entry !== '..') {
                                // Constr√≥i o caminho completo da entrada
                                $filePath = $directory . DIRECTORY_SEPARATOR . $entry;

                                // Verifica se √© um diret√≥rio
                                if (is_dir($filePath)) {
                                    // Adiciona o nome da pasta √† lista
                                    $pastas[] = $entry;
                                }
                            }
                        }
                        // Fecha o diret√≥rio
                        closedir($handle);
                    }

                    return $pastas;
                }

                // Chama a fun√ß√£o e passa o caminho do diret√≥rio
                $directoryPath = '../../backend/temas/';
                $pastas = listarPastas($directoryPath);

                // Exibe os nomes das pastas extra√≠das
                foreach ($pastas as $pasta) {
                    echo "<li id='".$pasta."' class='this-theme'>". $pasta . "</li>";
                };
                ?>
            </ul>
            </section>
        </main>
            <script>
                    let all = document.querySelectorAll(".this-theme")
                     all.forEach((theme) => {
                        theme.addEventListener("click",()=>{
                            window.location.href = `../Aula?class=${theme.id}`
                        })
                    })
                    function dropdown(){
                        document.querySelector(".logged").classList.toggle("active")
                        document.querySelector("#icon").classList.toggle("active")
                     }
                     function switchPages(url){
                        window.location.href = url
                    }
            </script>
</body>
</html>