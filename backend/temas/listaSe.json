{
    "nome":"Listas Simplesmente Encadeada",
    "content":"\n        <h1>Listas Simplesmente Encadeadas</h1>\n        <section>\n            <h2>O que é uma Lista Simplesmente Encadeada?</h2>\n            <p>\n                Imagine que você tem uma fila de amigos, e cada amigo está segurando a mão do próximo amigo na fila. \n                Esta é uma maneira fácil de pensar em uma lista simplesmente encadeada. Cada amigo é um \"nó\" na lista, \n                e a mão que eles estão segurando é a \"ligação\" para o próximo nó.\n            </p>\n            <p>\n                As listas simplesmente encadeadas são importantes na programação porque permitem armazenar e organizar dados de forma eficiente. \n                Elas são usadas quando você precisa de uma estrutura de dados que pode crescer ou diminuir dinamicamente, sem precisar de um \n                tamanho fixo. Além disso, elas facilitam a inserção e remoção de elementos em qualquer ponto da lista.\n            </p>\n        </section>\n        <section>\n            <h2>Como Funciona?</h2>\n            <p>\n                Vamos ver como essa fila de amigos funciona e como você pode brincar com ela. Vamos explorar algumas operações básicas que você \n                pode realizar em uma lista simplesmente encadeada.\n            </p>\n <img src='../../src/listasimplesmenteencadeada.png' class='imagem'>            <section class=\"example\">\n                <h3>Adicionando um Amigo ao Final</h3>\n                <p>\n                    Quando você quer adicionar um novo amigo ao final da fila, você pede ao último amigo que segure a mão do novo amigo. \n                    Agora, o novo amigo é o último da fila!\n                </p>\n                <pre>                    <code>\n                        // Exemplo em C#\n                        public class No {\n                            public int Valor;\n                            public No Proximo;\n\n                            public No(int valor) {\n                                Valor = valor;\n                                Proximo = null;\n                            }\n                        }\n\n                        public class ListaSimplesmenteEncadeada {\n                            private No primeiro;\n\n                            public ListaSimplesmenteEncadeada() {\n                                primeiro = null;\n                            }\n\n                            public void AdicionarAmigoAoFinal(int valor) {\n                                No novoNo = new No(valor);\n                                if (primeiro == null) {\n                                    primeiro = novoNo;\n                                } else {\n                                    No atual = primeiro;\n                                    while (atual.Proximo != null) {\n                                        atual = atual.Proximo;\n                                    }\n                                    atual.Proximo = novoNo;\n                                }\n                            }\n                        }\n                    </code>\n                </pre>\n            </section>\n            <section class=\"example\">\n                <h3>Adicionando um Amigo ao Início</h3>\n                <p>\n                    Quando você quer adicionar um novo amigo ao início da fila, o novo amigo segura a mão do amigo que estava na frente, \n                    e agora ele é o primeiro da fila!\n                </p>\n                <pre>                    <code>\n                        // Exemplo em C#\n                        public class ListaSimplesmenteEncadeada {\n                            private No primeiro;\n\n                            public ListaSimplesmenteEncadeada() {\n                                primeiro = null;\n                            }\n\n                            public void AdicionarAmigoAoInicio(int valor) {\n                                No novoNo = new No(valor);\n                                novoNo.Proximo = primeiro;\n                                primeiro = novoNo;\n                            }\n                        }\n                    </code>\n                </pre>\n            </section>\n            <section class=\"example\">\n                <h3>Adicionando um Amigo no Meio</h3>\n                <p>\n                    Quando você quer adicionar um novo amigo no meio da fila, você pede ao amigo que está no meio para segurar a mão do novo amigo, \n                    e o novo amigo segura a mão do próximo amigo. Agora, ele está no meio da fila!\n                </p>\n                <pre>                    <code>\n                        // Exemplo em C#\n                        public class ListaSimplesmenteEncadeada {\n                            private No primeiro;\n\n                            public ListaSimplesmenteEncadeada() {\n                                primeiro = null;\n                            }\n\n                            public void AdicionarAmigoNoMeio(int valor, int posicao) {\n                                No novoNo = new No(valor);\n                                if (posicao == 0) {\n                                    AdicionarAmigoAoInicio(valor);\n                                } else {\n                                    No atual = primeiro;\n                                    for (int i = 0; i &lt; posicao - 1 &amp;&amp; atual != null; i++) {\n                                        atual = atual.Proximo;\n                                    }\n                                    if (atual != null) {\n                                        novoNo.Proximo = atual.Proximo;\n                                        atual.Proximo = novoNo;\n                                    } else {\n                                        throw new ArgumentOutOfRangeException(\"Posição inválida!\");\n                                    }\n                                }\n                            }\n                        }\n                    </code>\n                </pre>\n            </section>\n            <section class=\"example\">\n                <h3>Brincando com a Fila</h3>\n                <p>\n                    Se você quiser saber quem é o primeiro amigo na fila, você simplesmente pergunta ao amigo que está na frente.\n                    E se quiser saber quem vem depois, é só perguntar a cada amigo quem eles estão segurando a mão.\n                </p>\n                <pre>                    <code>\n                        // Exemplo em C#\n                        public class ListaSimplesmenteEncadeada {\n                            // ... (outros métodos)\n\n                            public No VerPrimeiroAmigo() {\n                                return primeiro;\n                            }\n\n                            public No VerProximoAmigo(No atualAmigo) {\n                                return atualAmigo?.Proximo;\n                            }\n                        }\n                    </code>\n                </pre>\n            </section>\n        </section>\n    "
}